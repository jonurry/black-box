!function(n,t){"use strict";function o(n,o,r){this.direction=r!==t?r:e.DIRECTION.NONE,this.position={row:parseInt(n,10),column:parseInt(o,10)}}const e={};e.DIRECTION={UP:{rowIncrement:-1,columnIncrement:0},DOWN:{rowIncrement:1,columnIncrement:0},LEFT:{rowIncrement:0,columnIncrement:-1},RIGHT:{rowIncrement:0,columnIncrement:1},NONE:{rowIncrement:0,columnIncrement:0}},o.prototype.move=function(){try{var n=this.direction.rowIncrement,t=this.direction.columnIncrement;Number.isInteger(n)&&Number.isInteger(t)&&n>=-1&&n<=1&&t>=-1&&t<=1&&(this.position.row+=n,this.position.column+=t)}catch(n){throw"The vector direction was not a valid direction."}},o.prototype.setPosition=function(n,t){this.position.row=n,this.position.column=t},"function"==typeof define&&define.amd||("object"==typeof exports?(module.exports.VECTOR=e,module.exports.Vector=o):(n=n||{},n.BLACKBOX=n.BLACKBOX||{},n.BLACKBOX.VECTOR=e,n.BLACKBOX.Vector=o))}(this);